version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./html:/var/www/html
      - ./php-config/php.ini:/usr/local/etc/php/php.ini
      - ./apache-config/vhost.conf:/etc/apache2/sites-available/000-default.conf
      - ./ssl/server.crt:/etc/ssl/certs/server.crt
      - ./ssl/server.key:/etc/ssl/private/server.key
    environment:
      XDEBUG_MODE: develop,debug
      XDEBUG_CONFIG: client_host=host.docker.internal
    depends_on:
      - db
      - postgres
      - mailhog
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 1m
      timeout: 10s
      retries: 3

  db:
    image: mariadb:10.9
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dev_db
      MYSQL_USER: dev
      MYSQL_PASSWORD: devpass
    volumes:
      - db_data:/var/lib/mysql

  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: dev_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - pg_data:/var/lib/postgresql/data

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root

  adminer:
    image: adminer
    ports:
      - "8083:8080"

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8084:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin

  filebrowser:
    image: filebrowser/filebrowser
    ports:
      - "8082:80"
    volumes:
      - ./html:/srv
    environment:
      - FB_AUTH_METHOD=basic
      - FB_USERNAME=admin
      - FB_PASSWORD=admin

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
      
  node:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./nodejs/active:/app
      - ./ssl:/certs:ro
    ports:
      - "3000:3000"
    command: sh -c "npm install && npx vite"
    tty: true
    stdin_open: true

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  python:
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - ./python:/app
      - ./ssl:/certs:ro
    command: sh -c "pip install -r requirements.txt && python app.py"
    ports:
      - "5000:5000"
    depends_on:
      - db

volumes:
  db_data:
  pg_data:
  redis_data:
